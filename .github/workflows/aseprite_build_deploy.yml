name: Build and deploy Aseprite

on:
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Build sekarang'
        required: false
        default: 'true'
  push:
    branches:
      - master
      - main

env:
  BUILD_TYPE: Release

jobs:
  build-aseprite:
    name: Build Aseprite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]  # fokus Windows dulu. Tambah ubuntu-latest, macos-latest kalau perlu
      fail-fast: false

    steps:
      - name: Checkout minimal repo (untuk artefak rilis)
        uses: actions/checkout@v4

      # Skia cache
      - name: Get Skia from cache
        id: skia-cache
        uses: actions/cache@v4
        with:
          path: skia
          key: skia-${{ runner.os }}-m124

      - name: Download Skia m124 jika belum ada
        if: steps.skia-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          case "${{ runner.os }}" in
            Windows) SKIA_ZIP=Skia-Windows-Release-x64.zip ;;
            Linux)   SKIA_ZIP=Skia-Linux-Release-x64.zip ;;
            macOS)   SKIA_ZIP=Skia-macOS-Release-x64.zip ;;
          esac
          curl -L -o skia.zip https://github.com/aseprite/skia/releases/download/m124-08a5439a6b/$SKIA_ZIP
          mkdir -p skia
          7z x skia.zip -oskia

      # Ambil source Aseprite dari rilis terbaru (bisa dipaksa run manual tanpa nunggu rilis)
      - name: Dapatkan info rilis terbaru
        id: latest
        shell: bash
        run: |
          data=$(curl -sL https://api.github.com/repos/aseprite/aseprite/releases/latest)
          tag=$(echo "$data" | jq -r '.tag_name')
          src=$(echo "$data" | jq -r '.assets[] | select(.name | endswith("-Source.zip")) | .browser_download_url')
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "src=$src" >> $GITHUB_OUTPUT

      - name: Unduh source Aseprite
        run: |
          curl -L -o Aseprite-source.zip "${{ steps.latest.outputs.src }}"
          mkdir -p aseprite
          7z x Aseprite-source.zip -oaseprite

      # Siapkan toolchain Windows (VS 2022 + Ninja + CMake)
      - name: Aktifkan VS 2022 env (x64)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Pasang Ninja
        uses: seanmiddleditch/gha-setup-ninja@v1

      - name: Konfigurasi CMake (Windows)
        if: runner.os == 'Windows'
        working-directory: aseprite/build
        shell: cmd
        run: >
          cmake -G Ninja
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DLAF_BACKEND=skia
          -DSKIA_DIR=../../skia
          -DSKIA_LIBRARY_DIR=../../skia/out/Release-x64
          -DSKIA_LIBRARY=../../skia/out/Release-x64/skia.lib
          ..

      - name: Build
        working-directory: aseprite/build
        run: ninja aseprite

      - name: Jadikan portable (buat aseprite.ini)
        working-directory: aseprite/build/bin
        shell: bash
        run: echo '# portable' > aseprite.ini

      - name: Kemasi ZIP
        working-directory: aseprite/build/bin
        run: 7z a "Aseprite-${{ steps.latest.outputs.tag }}-${{ runner.os }}.zip" *

      - name: Buat Draft Release dan upload file
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          tag_name: "aseprite-${{ steps.latest.outputs.tag }}-${{ github.run_id }}"
          name: "Aseprite ${{ steps.latest.outputs.tag }} (${{ runner.os }})"
          files: |
            aseprite/build/bin/Aseprite-${{ steps.latest.outputs.tag }}-${{ runner.os }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
